Name:

   Raspberry Pi 2 Mini Distribution

About:

   A basic GNU/Linux distribution for the Raspberry Pi 2

Main features:

   * Arm Cortex A7, Neon, FPU optimized toolchain
   * Glibc C library
   * Systemd init system
   * GNU/Linux system utilities (no busybox)
   * Ethernet network support
   * OpenSSH client/server

Main builds:

   fs                - Filesystem
   linux             - Linux kernel
   rpi-firmware-boot - Bootloader firmware

   Note: Bulding the filesystem automatically builds the linux kernel because
         the kernel image is contained within the filesystem. Hence no explicit
         build of the linux kernel is required.

Quick build guide:

   Note: Before building, please make sure that you have all required Ubuntu
         packages installed. See section "Build system requirements".

   $ git clone --recursive git://github.com/mini-distribution/raspberrypi2.git
   $ cd raspberrypi2
   $ buildgear build fs
   $ buildgear build rpi-firmware-boot

Prebuilt images:

    http://mini-distribution.io/prebuilds/raspberrypi2

Login details:

    Username: root
    Password: root

Installation:

    To be done.

Build system requirements:

   Tested on Ubuntu 18.04 (64-bit x86) with the following additional packages
   installed:

   $ sudo apt-get install unzip groff bison flex gperf texinfo xsltproc \
                          libtool-bin libncurses5-dev gawk libexpat1-dev \
                          gettext u-boot-tools libglib2.0-dev intltool \
                          libxml2-utils docbook-xml cmake g++ pixz lzop \
                          u-boot-tools docbook-xml ruby docbook-xsl \
                          python3 python3-pip ninja-build meson


   Also requires reconfiguring "/bin/sh" to use bash:

   $ sudo dpkg-reconfigure dash

   Fact: Many software distributions fail to build using the dash shell.

Known issues:

   None

Filesystem layout:

   /usr/bin/            User binaries
   /usr/sbin/           System binaries (daemons, system utilities, etc.)
   /usr/lib/            Libraries
   /usr/lib/<prog>/     Program specific libraries (plug-ins, addons, etc.)
   /usr/include/        Header files
   /usr/share/man/      Man pages
   /usr/share/<prog>/   Program data files shared across all architectures
   /usr/etc/<prog>/     Configuration files for user programs
   /etc/                Configuration files for system programs

   The filesystem directory hierachy is arranged according to the FHS 2.3 
   standard with the exceptions that /bin and /sbin are unused. Instead all
   software make use of /usr/bin and /usr/sbin. For backwards compatibility
   /bin and /sbin remain links to /usr/bin and /usr/sbin respectively.
   
   See http://www.pathname.com/fhs/pub/fhs-2.3.html for more details.

Maintainer:

   Martin Lund <martin.lund@keep-it-simple.com>
